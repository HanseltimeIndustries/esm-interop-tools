name: Tests
on:
  workflow_call:
    inputs:
      from:
        required: true
        type: string

# This will cancel in progress jobs if another job with the same ref gets started.
# Github run_id is a backup in case github.ref doesn't exist for some reason
concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

jobs:
  ci-checks:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v4
      # TODO: caching this action would accelerate the run
      - name: corepack
        run: |
          corepack enable
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
          cache-dependency-path: yarn.lock
      - name: install
        run: |
          yarn install --immutable
      - name: commit-linting
        run: |
          if [[ "${{ github.base_ref }}" != "" ]]; then
            echo "Setting up git environment for commitlint of pull request"
            git fetch origin ${{ github.base_ref }}
            git fetch origin ${{ github.head_ref }}
            yarn commitlint --from ${{ github.event.pull_request.head.sha }}~${{ github.event.pull_request.commits }} --to ${{ github.event.pull_request.head.sha }} --verbose
          else
            echo "Setting up git environment for commitlint of branch push"
            git fetch origin ${{ github.ref_name }} --unshallow
            yarn commitlint --from $(git rev-list --max-parents=0 origin/${{ github.ref_name }})
          fi
      - name: build
        run: |
          yarn build
      - name: linting
        run: |
          yarn lint
      - name: formatting
        run: |
          yarn format
      - name: testing
        run: |
          yarn test
      - name: Save dist
        uses: actions/cache/save@v4
        with:
          path: |
            dist/
          key: dist-${{ github.sha }}
          enableCrossOsArchive: true
  pkg-test:
    needs:
      - ci-checks
    strategy:
      fail-fast: false
      matrix:
        node-version: [20.x]
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache-dependency-path: yarn.lock
      - name: install
        run: |
          corepack enable
          yarn install --immutable
      - name: Restore dist
        uses: actions/cache/restore@v4
        with:
          path: |
            dist/
          key: dist-${{ github.sha }}
          enableCrossOsArchive: true
      - id: pkgtest-setup
        uses: hanseltimeindustries/pkgtest-setup-action@v1
      - name: pkgtest
        run: |
          yarn pkgtest -p 1 --noYarnv1CacheClean --collectLogFilesOn error --collectLogFilesStage tests --onWindowsProblems skip
        # Collect any logs from the --collectLogFilesOn error to troubleshoot failures
      - name: Archive logs on failure
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pkgtest-log-files-${{ matrix.os }}-${{ matrix.node-version }}
          path: ${{ steps.pkgtest-setup.outputs.collect_log_file_folder }}
          retention-days: 1
          include-hidden-files: true
